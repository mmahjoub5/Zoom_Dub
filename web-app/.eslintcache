[{"C:\\Users\\USER\\Documents\\projects\\Zoom_Dub\\web-app\\src\\index.js":"1","C:\\Users\\USER\\Documents\\projects\\Zoom_Dub\\web-app\\src\\reportWebVitals.js":"2","C:\\Users\\USER\\Documents\\projects\\Zoom_Dub\\web-app\\src\\App.js":"3","C:\\Users\\USER\\Documents\\projects\\Zoom_Dub\\web-app\\src\\Login\\Loginscreen.js":"4","C:\\Users\\USER\\Documents\\projects\\Zoom_Dub\\web-app\\src\\Home.js":"5","C:\\Users\\USER\\Documents\\projects\\Zoom_Dub\\web-app\\src\\Login\\Login.js":"6","C:\\Users\\USER\\Documents\\projects\\Zoom_Dub\\web-app\\src\\Login\\Register.js":"7","C:\\Users\\USER\\Documents\\projects\\Zoom_Dub\\web-app\\src\\routes\\Room.js":"8","C:\\Users\\USER\\Documents\\projects\\Zoom_Dub\\web-app\\src\\routes\\CreateRoom.js":"9"},{"size":522,"mtime":1610423570474,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1609559413004,"results":"12","hashOfConfig":"11"},{"size":621,"mtime":1610423570468,"results":"13","hashOfConfig":"11"},{"size":1936,"mtime":1610423570471,"results":"14","hashOfConfig":"11"},{"size":859,"mtime":1610672941245,"results":"15","hashOfConfig":"11"},{"size":3028,"mtime":1610664893411,"results":"16","hashOfConfig":"11"},{"size":3642,"mtime":1610427284823,"results":"17","hashOfConfig":"11"},{"size":4147,"mtime":1610686094872,"results":"18","hashOfConfig":"11"},{"size":1056,"mtime":1610687610427,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},"ficogf",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"23"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"23"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"23"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"23"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"23"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\USER\\Documents\\projects\\Zoom_Dub\\web-app\\src\\index.js",["45","46"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Login from \"./Login/Loginscreen\"\nimport Home from \"./Home\"\n\n\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["47","48"],"C:\\Users\\USER\\Documents\\projects\\Zoom_Dub\\web-app\\src\\reportWebVitals.js",[],"C:\\Users\\USER\\Documents\\projects\\Zoom_Dub\\web-app\\src\\App.js",[],"C:\\Users\\USER\\Documents\\projects\\Zoom_Dub\\web-app\\src\\Login\\Loginscreen.js",["49","50","51"],"import React, { Component } from 'react';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport Login from './Login';\nimport Register from './Register';\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\n\nclass Loginscreen extends Component {\n  constructor(props){\n    super(props);\n    this.state={\n      username:'',\n      password:'',\n      loginscreen:[],\n      loginmessage:'',\n      buttonLabel:'Register',\n      isLogin: false,\n    }\n    this.handleClick = this.handleClick.bind(this)\n  }\n  componentDidMount(){\n    var loginscreen=[];\n    loginscreen.push(<Login parentContext={this} appContext={this.props.parentContext}/>);\n    var loginmessage = \"Not registered yet? Register Now!\";\n    this.setState({\n                  loginscreen:loginscreen,\n                  loginmessage:loginmessage\n                    })\n  }\n\n  render() {\n    if (!SpeechRecognition.browserSupportsSpeechRecognition()) {\n      console.log(\"it works!\");\n    }\n    if(this.state.isLogin) return <Register parentContext={this}/>\n    else if(!this.state.isLogin) return <Login parentContext={this}/>\n    return (\n      <div className=\"loginscreen\">\n        {this.state.loginscreen}\n        <div>\n          {this.state.loginmessage}\n          <div>\n              <button name=\"isLogin\" value={!this.state.isLogin} label={this.state.buttonLabel} style={style} onClick={(event) => this.handleClick(event)}/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  handleClick(event){\n    const {name, value} = event.target;\n    this.setState({[name]: value});\n    if(value) this.setState({buttonLabel: \"Login\", loginmessage:\"Already registered? Go to Login\" })\n    else if(!value) this.setState({buttonLabel:\"Register\", loginmessage: \"Not Registered yet? Go to registration\"});\n  }\n  \n}\nconst style = {\n  margin: 15,\n};\nexport default Loginscreen;","C:\\Users\\USER\\Documents\\projects\\Zoom_Dub\\web-app\\src\\Home.js",["52","53","54"],"import React, {Component} from \"react\";\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport Room from './routes/Room';\nimport CreateRoom from './routes/CreateRoom';\nimport TextField from 'material-ui/TextField';\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\nrequire('react-rtc-real/assets/index.css');\n\nclass Home extends Component {\n    constructor (props) {\n        super(props);\n    } \n\n    render() { \n      return ( \n        <MuiThemeProvider> \n            <BrowserRouter>\n                <Switch>\n                    <Route path=\"/\" exact component={CreateRoom} />\n                    <Route path=\"/room/:roomId\" component = {Room} />\n                </Switch>\n            </BrowserRouter>\n        </MuiThemeProvider>\n        )\n    }\n}\n\n \nexport default Home;\n","C:\\Users\\USER\\Documents\\projects\\Zoom_Dub\\web-app\\src\\Login\\Login.js",["55","56","57","58","59","60"],"import React, { Component } from 'react';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport AppBar from 'material-ui/AppBar';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport TextField from 'material-ui/TextField';\nimport axios from 'axios';\nimport UploadScreen from 'material-ui/svg-icons/file/cloud-upload';\nimport  { Redirect } from 'react-router-dom'\nimport Home from '../Home'\nimport Register from './Register';\n//import theme from \"../themes/theme\";\n\n\nclass Login extends Component {\nconstructor(props){\n  super(props);\n  this.state = {\n    email:'',\n    password:'',\n    submit: false,\n    register: false,\n    user: {}\n  };\n //this.clearscreen = this.clearscreen.bind(this);\n  this.handleClick = this.handleClick.bind(this)\n\n }\n\n hide_screen(){\n   this.setState({\n     clearscreen: 'true'\n   })\n }\n\nrender() {\n  \n    if(this.state.submit) {\n      console.log(\"WHAT UP \", this.state.user._id)\n      return (<Home id={this.state.user._id}/>);\n    }\n    else if(this.state.register) {\n      return (<Register/>);\n    }\n\n    return (\n      \n      <MuiThemeProvider>\n        <div>\n          <div>\n          <AppBar\n             title=\"Login\"\n           />\n           <TextField\n             hintText=\"Enter your Username\"\n             floatingLabelText=\"Username\"\n             onChange = {(event,newValue) => this.setState({email:newValue})}\n             />\n           <br/>\n             <TextField\n               type=\"password\"\n               hintText=\"Enter your Password\"\n               floatingLabelText=\"Password\"\n               onChange = {(event,newValue) => this.setState({password:newValue})}\n               />\n             <br/>\n             <button name=\"submit\" onClick={(event) => this.handleClick(event)}>\n               Submit\n              </button>\n             <button name=\"register\"  onClick={(event) => this.handleClick(event)}>\n               Register\n             </button>\n         </div>\n         </div>\n      </MuiThemeProvider>\n    );\n  }\n\n  handleClick(event){\n    //var apiBaseUrl = \"http://localhost:8080\";\n    const name = event.target.name;\n    console.log(event.target);\n    \n    var payload={\n      \"email\":this.state.email,\n      \"password\":this.state.password \n    }\n    if(name === \"submit\") {\n      axios.post('http://localhost:5000/user/login', payload)\n        .then((response)=> {\n          console.log(response);\n          console.log(response.status);\n          \n          if(response.status == 200){\n            console.log(\"Login successful\");\n            this.setState({submit: true});\n            this.setState({user: response.data})\n          }\n            \n          else if(response.status == 401){\n            alert(\"WRONG CREDENTIALS\")\n            this.setState({[name]: false});                 \n          }\n        })\n        .catch(function (error) {\n          console.log(error);\n      });\n    } else if(name === \"register\") {\n      this.setState({[name]: true})\n    }\n  }\n}\n\nconst style = {\n margin: 15,\n};\n\n\nexport default Login;\n","C:\\Users\\USER\\Documents\\projects\\Zoom_Dub\\web-app\\src\\Login\\Register.js",["61","62","63"],"import React, { Component } from 'react';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport AppBar from 'material-ui/AppBar';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport TextField from 'material-ui/TextField';\nimport axios from 'axios';\nimport Login from './Login';\nimport Home from '../Home';\n\nclass Register extends Component {\n  constructor(){\n    super();\n    this.state={\n      first_name:'',\n      last_name:'',\n      email:'',\n      password:'',\n      success: 0,\n      login: false\n    }\n    this.handleClick = this.handleClick.bind(this)\n  }\n  render() { \n    if(this.state.login || this.state.success===1){\n      return(<Login/>)\n    };\n    return (\n      <div >\n        <MuiThemeProvider>\n          <div>\n          <AppBar style={{backgroundColor:\"white\"}}\n             title=\"Register\"\n           />\n           <TextField\n             hintText=\"Enter your First Name\"\n             floatingLabelText=\"First Name\"\n             onChange = {(event,newValue) => this.setState({first_name:newValue})}\n             />\n           <br/>\n           <TextField\n             hintText=\"Enter your Last Name\"\n             floatingLabelText=\"Last Name\"\n             onChange = {(event,newValue) => this.setState({last_name:newValue})}\n             />\n           <br/>\n           <TextField\n             hintText=\"Enter your Email\"\n             type=\"email\"\n             floatingLabelText=\"Email\"\n             onChange = {(event,newValue) => this.setState({email:newValue})}\n             />\n           <br/>\n           <TextField\n             type = \"password\"\n             hintText=\"Enter your Password\"\n             floatingLabelText=\"Password\"\n             onChange = {(event,newValue) => this.setState({password:newValue})}\n             />\n           <br/>\n           <button \n           name='success'\n            primary={true} \n            style={{backgroundColor:\"dodgerblue\",fontFamily: \"Arial\"}}\n            onClick={(event) => this.handleClick(event)}>\n              Submit and Register\n           </button> \n           <button \n           name='login'\n            primary={true} \n            style={{backgroundColor:\"dodgerblue\",fontFamily: \"Arial\"}}\n            onClick={(event) => this.handleClick(event)}>\n              Back to Login Page\n           </button>    \n          </div>\n         </MuiThemeProvider>\n      </div>\n    );\n  }\n  handleClick(event) {\n    //var apiBaseUrl = \"http://localhost:8080\";\n    console.log(\"values\",this.state.first_name,this.state.last_name,this.state.email,this.state.password);\n    const name = event.target.name;\n    //To be done:check for empty values before hitting submit\n    var payload={\n    \"fname\": this.state.first_name,\n    \"lname\":this.state.last_name,\n    \"email\":this.state.email,\n    \"password\":this.state.password\n    }\n    if(name === \"success\") {\n      axios.post('http://localhost:5000/user/signup', payload, {headers})\n        .then( (response)=> {\n          console.log(response);\n          if(response.status === 200){\n            this.setState({\n              success: 1\n            });\n          }\n          else if(response.status === 409) {\n            alert(\"User already exists\")\n            this.setState({success: 2})\n          }\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    }\n    else if(name === \"login\") {\n      this.setState({[name]: true})\n    }\n  }\n}\nconst style = {\n  margin: 15,\n  color: \"DodgerBlue\",\n  padding: \"10px\",\n};\nconst headers = {\n    'Content-Type': 'application/json',\n    'X-Auth-Token': '97e0d315477f435489cf04904c9d0e6co',\n};\n  \nexport default Register;","C:\\Users\\USER\\Documents\\projects\\Zoom_Dub\\web-app\\src\\routes\\Room.js",["64","65"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport Peer from \"simple-peer\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    padding: 20px;\r\n    display: flex;\r\n    height: 100vh;\r\n    width: 90%;\r\n    margin: auto;\r\n    flex-wrap: wrap;\r\n`;\r\n\r\nconst StyledVideo = styled.video`\r\n    height: 40%;\r\n    width: 50%;\r\n`;\r\n\r\nconst Video = (props) => {\r\n    const ref = useRef();\r\n\r\n    useEffect(() => {\r\n        props.peer.on(\"stream\", stream => {\r\n            ref.current.srcObject = stream;\r\n        })\r\n    }, []);\r\n\r\n    return (\r\n        <StyledVideo playsInline autoPlay ref={ref} />\r\n    );\r\n}\r\n\r\n\r\nconst videoConstraints = {\r\n    height: window.innerHeight / 2,\r\n    width: window.innerWidth / 2\r\n};\r\n\r\nconst Room = (props) => {\r\n    const [peers, setPeers] = useState([]); //collection of peers for rendering\r\n    const socketRef = useRef();\r\n    const userVideo = useRef();\r\n    const peersRef = useRef([]); //collection of peers/users for logic\r\n    const roomID = props.match.params.roomID;\r\n\r\n    useEffect(() => { //connect to room the first time\r\n        socketRef.current = io.connect(\"/\");\r\n        navigator.mediaDevices.getUserMedia({ video: videoConstraints, audio: true })\r\n            .then(stream => { //ask for camera, 3 different events to listen on\r\n                userVideo.current.srcObject = stream;\r\n                socketRef.current.emit(\"join room\", roomID); //tell server that I joined\r\n                socketRef.current.on(\"all users\", users => { //when server returns all users after I connect\r\n                    const peers = [];\r\n                    users.forEach(userID => {\r\n                        const peer = createPeer(userID, socketRef.current.id, stream);\r\n                        peersRef.current.push({\r\n                            peerID: userID,\r\n                            peer,\r\n                        }) //push object pair of peerid <-> peer\r\n                        peers.push(peer); //add to array of peers ref for logic\r\n                    })\r\n                    setPeers(peers); //our peers for rendering\r\n                })\r\n\r\n                socketRef.current.on(\"user joined\", payload => { //when others join my rooms\r\n                    const peer = addPeer(payload.signal, payload.callerID, stream);\r\n                    peersRef.current.push({\r\n                        peerID: payload.callerID,\r\n                        peer,\r\n                    }) //create peer\r\n\r\n                    setPeers(users => [...users, peer]); //add peer to users array\r\n                });\r\n\r\n                socketRef.current.on(\"receiving returned signal\", payload => {\r\n                    const item = peersRef.current.find(p => p.peerID === payload.id);\r\n                    item.peer.signal(payload.signal);\r\n                });\r\n            })\r\n    }, []);\r\n\r\n    function createPeer(userToSignal, callerID, stream) { //when I get signal from others in a room i just joined\r\n        const peer = new Peer({\r\n            initiator: true,\r\n            trickle: false,\r\n            stream,\r\n        });\r\n\r\n        peer.on(\"signal\", signal => {\r\n            socketRef.current.emit(\"sending signal\", { userToSignal, callerID, signal })\r\n        })\r\n\r\n        return peer;\r\n    }\r\n\r\n    function addPeer(incomingSignal, callerID, stream) { //when you receive a signal from someone who just joined your room\r\n        const peer = new Peer({\r\n            initiator: false,\r\n            trickle: false,\r\n            stream,\r\n        })\r\n\r\n        peer.on(\"signal\", signal => { //I got their signal, I'm sending my signal back out\r\n            socketRef.current.emit(\"returning signal\", { signal, callerID })\r\n        })\r\n\r\n        peer.signal(incomingSignal);\r\n\r\n        return peer;\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <StyledVideo muted ref={userVideo} autoPlay playsInline />\r\n            {peers.map((peer, index) => {\r\n                return (\r\n                    <Video key={index} peer={peer} />\r\n                );\r\n            })}\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Room;","C:\\Users\\USER\\Documents\\projects\\Zoom_Dub\\web-app\\src\\routes\\CreateRoom.js",["66","67"],{"ruleId":"68","severity":1,"message":"69","line":6,"column":8,"nodeType":"70","messageId":"71","endLine":6,"endColumn":13},{"ruleId":"68","severity":1,"message":"72","line":7,"column":8,"nodeType":"70","messageId":"71","endLine":7,"endColumn":12},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"68","severity":1,"message":"77","line":2,"column":8,"nodeType":"70","messageId":"71","endLine":2,"endColumn":24},{"ruleId":"68","severity":1,"message":"78","line":3,"column":8,"nodeType":"70","messageId":"71","endLine":3,"endColumn":20},{"ruleId":"68","severity":1,"message":"79","line":6,"column":29,"nodeType":"70","messageId":"71","endLine":6,"endColumn":49},{"ruleId":"68","severity":1,"message":"78","line":3,"column":8,"nodeType":"70","messageId":"71","endLine":3,"endColumn":20},{"ruleId":"68","severity":1,"message":"80","line":6,"column":8,"nodeType":"70","messageId":"71","endLine":6,"endColumn":17},{"ruleId":"81","severity":1,"message":"82","line":11,"column":5,"nodeType":"83","messageId":"84","endLine":13,"endColumn":6},{"ruleId":"68","severity":1,"message":"78","line":4,"column":8,"nodeType":"70","messageId":"71","endLine":4,"endColumn":20},{"ruleId":"68","severity":1,"message":"85","line":7,"column":8,"nodeType":"70","messageId":"71","endLine":7,"endColumn":20},{"ruleId":"68","severity":1,"message":"86","line":8,"column":11,"nodeType":"70","messageId":"71","endLine":8,"endColumn":19},{"ruleId":"87","severity":1,"message":"88","line":93,"column":30,"nodeType":"89","messageId":"90","endLine":93,"endColumn":32},{"ruleId":"87","severity":1,"message":"88","line":99,"column":35,"nodeType":"89","messageId":"90","endLine":99,"endColumn":37},{"ruleId":"68","severity":1,"message":"91","line":113,"column":7,"nodeType":"70","messageId":"71","endLine":113,"endColumn":12},{"ruleId":"68","severity":1,"message":"78","line":4,"column":8,"nodeType":"70","messageId":"71","endLine":4,"endColumn":20},{"ruleId":"68","severity":1,"message":"72","line":8,"column":8,"nodeType":"70","messageId":"71","endLine":8,"endColumn":12},{"ruleId":"68","severity":1,"message":"91","line":113,"column":7,"nodeType":"70","messageId":"71","endLine":113,"endColumn":12},{"ruleId":"92","severity":1,"message":"93","line":27,"column":8,"nodeType":"94","endLine":27,"endColumn":10,"suggestions":"95"},{"ruleId":"92","severity":1,"message":"96","line":81,"column":8,"nodeType":"94","endLine":81,"endColumn":10,"suggestions":"97"},{"ruleId":"68","severity":1,"message":"98","line":18,"column":15,"nodeType":"70","messageId":"71","endLine":18,"endColumn":17},{"ruleId":"99","severity":1,"message":"100","line":19,"column":28,"nodeType":"101","messageId":"102","endLine":19,"endColumn":41},"no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","'Home' is defined but never used.","no-native-reassign",["103"],"no-negated-in-lhs",["104"],"'MuiThemeProvider' is defined but never used.","'RaisedButton' is defined but never used.","'useSpeechRecognition' is defined but never used.","'TextField' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'UploadScreen' is defined but never used.","'Redirect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'style' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.peer'. Either include it or remove the dependency array.","ArrayExpression",["105"],"React Hook useEffect has a missing dependency: 'roomID'. Either include it or remove the dependency array.",["106"],"'id' is assigned a value but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","no-global-assign","no-unsafe-negation",{"desc":"107","fix":"108"},{"desc":"109","fix":"110"},"Update the dependencies array to be: [props.peer]",{"range":"111","text":"112"},"Update the dependencies array to be: [roomID]",{"range":"113","text":"114"},[593,595],"[props.peer]",[2890,2892],"[roomID]"]